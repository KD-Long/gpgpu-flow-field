/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./model.glb 
*/

import React, { useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'


// Sends the original geometry to parent via onGeometryLoad callback
// Receives the computed geometry via computedGeometry prop
// Renders particles using the computed geometry (or original while loading)

export function Model({ onGeometryLoad, ...props }) {
  const { nodes, materials } = useGLTF('static/model.glb')

  // Send the original geometry to parent on mount
  useEffect(() => {
    if (nodes.boat?.geometry && onGeometryLoad) {
      // console.log('Model loaded, sending geometry to parent')
      onGeometryLoad(nodes.boat.geometry)
    }
  }, [nodes, onGeometryLoad])

  return (
    <group {...props} dispose={null} >
      <points geometry={nodes.boat.geometry}>
      </points>
    </group>


  )
}

useGLTF.preload('static/model.glb')
